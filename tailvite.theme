<?php

/**
 * @file
 * Functions to support theming.
 */


/**
 * Functions to support Vite.
 */

use Drupal\Core\Site\Settings;

/**
 * Implements hook_library_info_alter().
 */
function tailvite_library_info_alter(&$libraries, $extension)
{
  if ($extension !== 'tailvite') {
    return;
  }

  $local = Settings::get('hot_module_replacement');

  // replace library entry, serve from vite server.
  if ($local) {
    // kint($libraries, $local);
    // Replace library paths so they are ready for either Dev or Prd.
    // For Dev we need to load all assets via ViteJS, no need for parssing CSS
    // All css must be imported in main.js
    foreach ($libraries as $library => $settings) {
      // also support css entries.
      if (isset($settings['css'])) {
        foreach ($settings['css'] as $type => $paths) {
          foreach ($paths as $path => $options) {
            _tailvite_replace_library($libraries[$library]['css'][$type], $path, $options);
          }
        }
      }

      if (isset($settings['js'])) {
        foreach ($settings['js'] as $path => $options) {
          _tailvite_replace_library($libraries[$library]['js'], $path, $options);
        }
      }
    }
    return;
  }

  // Read the production Manifest file to find CSS files imported via JS files.
  $manifest_file = file_get_contents(__DIR__  . '/dist/.vite/manifest.json');
  $manifest = json_decode($manifest_file);

  foreach ($libraries as $library => &$settings) {
    if (isset($settings['css'])) {
      foreach ($settings['css'] as $type => $paths) {
        foreach ($paths as $path => $options) {
          if (isset($manifest->$path)) {
            unset($settings['css'][$type][$path]);
            $path_mani = $manifest->$path;
            $file_path = 'dist/' . $path_mani->file;
            $settings['css'][$type][$file_path] = $options;
          }
        }
      }
    }

    if (isset($settings['js'])) {
      foreach ($settings['js'] as $path => $options) {
        if (isset($manifest->$path)) {
          unset($settings['js'][$path]);
          $path_mani = $manifest->$path;
          $file_path = 'dist/' . $path_mani->file;
          $options['minified'] = TRUE;
          $settings['js'][$file_path] = $options;
          if (isset($path_mani->css)) {
            foreach ($path_mani->css as $css_file) {
              $settings['css']['component']["dist/$css_file"] = [];
            }
          }
        }
      }
    }
  }
}

/**
 * Replace an asset path with one that works with Vite.
 *
 * @param array $library
 *   The library to be altered.
 * @param string $path
 *   The file path and name.
 * @param array $options
 *   Any settings that were part of the original file's settings.
 */
function _tailvite_replace_library(array &$library, string $path, array $options): void
{
  // Ignore external paths
  if (preg_match('/^(https?:)?\/\//', $path)) {
    return;
  }
  // Ignore libraries
  if (preg_match('/^\/libraries\//', $path)) {
    return;
  }

  // Ignore dist.
  if (preg_match('/^dist\//', $path)) {
    return;
  }

  $dir = 'dist';

  // Remove the old library info.
  unset($library[$path]);

  $dir = '//localhost:12321';
  $options['type'] = 'external';
  if (preg_match('/.m?js$/', $path)) {
    $options['crossorigin'] = TRUE;
  }

  // Prepend the local development url.
  $path = "$dir/$path";
  // Add in the new altered library.
  $library[$path] = $options;
}

/**
 * Implements hook_preprocess_html().
 */
function tailvite_preprocess_html(&$variables)
{
  $variables['#attached']['drupalSettings']['path']['themeUrl'] = \Drupal::theme()->getActiveTheme()->getPath();
}
